{"ast":null,"code":"var _jsxFileName = \"/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js\";\nimport React from 'react';\nimport Todo from './Todo';\nimport PropTypes from 'prop-types';\nimport { editTodo } from '../actions';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\n\nconst TodoList = ({\n  todos\n}) => {\n  return React.createElement(Col, {\n    lg: {\n      span: 24\n    },\n    className: \" mt-lg-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, todos.map(value => {\n    if (value.status === false) {\n      return React.createElement(Todo, Object.assign({\n        key: value.id\n      }, value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n\n    return null;\n  }));\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired,\n    content: PropTypes.string.isRequired,\n    created: PropTypes.string.isRequired,\n    dead: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\n\nconst mapState2Props = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapState2Props)(TodoList);","map":{"version":3,"sources":["/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js"],"names":["React","Todo","PropTypes","editTodo","connect","Row","Col","TodoList","todos","span","map","value","status","id","propTypes","arrayOf","shape","string","isRequired","bool","content","created","dead","mapState2Props","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAO,oBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC5B,SACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAT;AAAoB,IAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEED,KAAK,CAACE,GAAN,CAAUC,KAAK,IAAI;AACjB,QAAGA,KAAK,CAACC,MAAN,KAAe,KAAlB,EAAwB;AACtB,aACE,oBAAC,IAAD;AACI,QAAA,GAAG,EAAID,KAAK,CAACE;AADjB,SAEQF,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAMA;;AACF,WAAO,IAAP;AACD,GAVD,CAFF,CADF;AAgBA,CAjBF;;AAmBAJ,QAAQ,CAACO,SAAT,GAAqB;AACjBN,EAAAA,KAAK,EAACN,SAAS,CAACa,OAAV,CACFb,SAAS,CAACc,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAACX,SAAS,CAACe,MAAV,CAAiBC,UADR;AAEZN,IAAAA,MAAM,EAACV,SAAS,CAACiB,IAAV,CAAeD,UAFV;AAGZE,IAAAA,OAAO,EAAClB,SAAS,CAACe,MAAV,CAAiBC,UAHb;AAIZG,IAAAA,OAAO,EAACnB,SAAS,CAACe,MAAV,CAAiBC,UAJb;AAKZI,IAAAA,IAAI,EAACpB,SAAS,CAACe,MAAV,CAAiBC;AALV,GAAhB,EAMGA,UAPD,EAQJA;AATe,CAArB;;AAYA,MAAMK,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAO;AACLhB,IAAAA,KAAK,EAAEgB,KAAK,CAAChB;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACmB,cAAD,CAAP,CAAwBhB,QAAxB,CAAf","sourcesContent":["import React from 'react'\nimport Todo from './Todo'\nimport PropTypes from 'prop-types'\nimport {editTodo} from '../actions'\nimport {connect} from 'react-redux'\nimport { Row, Col } from 'antd';\nimport \"antd/dist/antd.css\"; \n\nconst TodoList = ({todos}) => {\n  return(\n    <Col lg={{span:24}} className=\" mt-lg-4\" >\n    {\n      todos.map(value => {\n        if(value.status===false){\n          return(\n            <Todo\n                key = {value.id}\n                {...value}\n            />\n\n        )}\n        return null\n      })\n    }\n  </Col>\n)}\n\nTodoList.propTypes = {\n    todos:PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.string.isRequired,\n            status:PropTypes.bool.isRequired,\n            content:PropTypes.string.isRequired,\n            created:PropTypes.string.isRequired,\n            dead:PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired\n}\n\nconst mapState2Props = (state) => {\n  return {\n    todos: state.todos\n  }\n}\n\nexport default connect(mapState2Props)(TodoList)"]},"metadata":{},"sourceType":"module"}