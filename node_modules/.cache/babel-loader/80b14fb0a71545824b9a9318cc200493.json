{"ast":null,"code":"var _jsxFileName = \"/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js\";\nimport React from 'react';\nimport Todo from './Todo';\nimport PropTypes from 'prop-types';\nimport { editTodo } from '../actions';\nimport { connect } from 'react-redux';\n\nconst TodoList = ({\n  todos\n}) => {\n  console.log(\"todo list\", todos);\n  return React.createElement(\"div\", {\n    className: \"col-lg-12 mt-lg-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, todos.map(value => {\n    if (value.status === false) {\n      return React.createElement(Todo, {\n        key: value.id,\n        id: value.id,\n        status: value.status,\n        created: value.created,\n        content: value.content,\n        dead: value.dead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n\n    return null;\n  }));\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired,\n    content: PropTypes.string.isRequired,\n    created: PropTypes.string.isRequired,\n    dead: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\n\nconst mapState2Props = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapState2Props, mapDispatch2Props)(TodoList);","map":{"version":3,"sources":["/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js"],"names":["React","Todo","PropTypes","editTodo","connect","TodoList","todos","console","log","map","value","status","id","created","content","dead","propTypes","arrayOf","shape","string","isRequired","bool","mapState2Props","state","mapDispatch2Props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEA,KAAK,CAACG,GAAN,CAAUC,KAAK,IAAI;AACjB,QAAGA,KAAK,CAACC,MAAN,KAAe,KAAlB,EAAwB;AACtB,aAEE,oBAAC,IAAD;AACI,QAAA,GAAG,EAAID,KAAK,CAACE,EADjB;AAEI,QAAA,EAAE,EAAIF,KAAK,CAACE,EAFhB;AAGI,QAAA,MAAM,EAAIF,KAAK,CAACC,MAHpB;AAII,QAAA,OAAO,EAAID,KAAK,CAACG,OAJrB;AAKI,QAAA,OAAO,EAAIH,KAAK,CAACI,OALrB;AAMI,QAAA,IAAI,EAAIJ,KAAK,CAACK,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAWA;;AACF,WAAO,IAAP;AACD,GAfD,CAFF,CADF;AAqBA,CAvBF;;AAyBAV,QAAQ,CAACW,SAAT,GAAqB;AACjBV,EAAAA,KAAK,EAACJ,SAAS,CAACe,OAAV,CACFf,SAAS,CAACgB,KAAV,CAAgB;AACZN,IAAAA,EAAE,EAACV,SAAS,CAACiB,MAAV,CAAiBC,UADR;AAEZT,IAAAA,MAAM,EAACT,SAAS,CAACmB,IAAV,CAAeD,UAFV;AAGZN,IAAAA,OAAO,EAACZ,SAAS,CAACiB,MAAV,CAAiBC,UAHb;AAIZP,IAAAA,OAAO,EAACX,SAAS,CAACiB,MAAV,CAAiBC,UAJb;AAKZL,IAAAA,IAAI,EAACb,SAAS,CAACiB,MAAV,CAAiBC;AALV,GAAhB,EAMGA,UAPD,EAQJA;AATe,CAArB;;AAYA,MAAME,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAO;AACLjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeF,OAAO,CAACkB,cAAD,EAAiBE,iBAAjB,CAAP,CAA2CnB,QAA3C,CAAf","sourcesContent":["import React from 'react'\nimport Todo from './Todo'\nimport PropTypes from 'prop-types'\nimport {editTodo} from '../actions'\nimport {connect} from 'react-redux'\n\nconst TodoList = ({todos}) => {\n  console.log(\"todo list\", todos)\n  return(\n    <div className=\"col-lg-12 mt-lg-4\" >\n    {\n      todos.map(value => {\n        if(value.status===false){\n          return(\n            \n            <Todo\n                key = {value.id}\n                id = {value.id}\n                status = {value.status}\n                created = {value.created}\n                content = {value.content}\n                dead = {value.dead}\n            />\n\n        )}\n        return null\n      })\n    }\n  </div>\n)}\n\nTodoList.propTypes = {\n    todos:PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.string.isRequired,\n            status:PropTypes.bool.isRequired,\n            content:PropTypes.string.isRequired,\n            created:PropTypes.string.isRequired,\n            dead:PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired\n}\n\nconst mapState2Props = (state) => {\n  return {\n    todos: state.todos\n  }\n}\n\nexport default connect(mapState2Props, mapDispatch2Props)(TodoList)"]},"metadata":{},"sourceType":"module"}