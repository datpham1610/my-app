{"ast":null,"code":"var _jsxFileName = \"/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js\";\nimport React from 'react';\nimport Todo from './Todo';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({\n  todos,\n  toggleTodo\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, todos.map(todo => React.createElement(Todo, Object.assign({\n  key: todo.id\n}, todo, {\n  onClick: () => toggleTodo(todo.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}))));\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default TodoList;","map":{"version":3,"sources":["/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js"],"names":["React","Todo","PropTypes","TodoList","todos","toggleTodo","map","todo","id","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAK,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,GAAwBD,IAAxB;AAA8B,EAAA,OAAO,EAAI,MAAMF,UAAU,CAACE,IAAI,CAACC,EAAN,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB,CADL,CADJ;;AAMAL,QAAQ,CAACM,SAAT,GAAqB;AACjBL,EAAAA,KAAK,EAACF,SAAS,CAACQ,OAAV,CACFR,SAAS,CAACS,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAACN,SAAS,CAACU,MAAV,CAAiBC,UADR;AAEZC,IAAAA,SAAS,EAACZ,SAAS,CAACa,IAAV,CAAeF,UAFb;AAGZG,IAAAA,IAAI,EAACd,SAAS,CAACe,MAAV,CAAiBJ;AAHV,GAAhB,EAIGA,UALD,EAMJA,UAPe;AAQjBR,EAAAA,UAAU,EAACH,SAAS,CAACgB,IAAV,CAAeL;AART,CAArB;AAWA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport Todo from './Todo'\nimport PropTypes from 'prop-types'\n\nconst TodoList = ({todos, toggleTodo}) => (\n    <ul>\n        {todos.map(todo => (<Todo key={todo.id} {...todo} onClick = {() => toggleTodo(todo.id)} />))}\n    </ul>\n)\n\nTodoList.propTypes = {\n    todos:PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.number.isRequired,\n            completed:PropTypes.bool.isRequired,\n            text:PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    toggleTodo:PropTypes.func.isRequired\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}