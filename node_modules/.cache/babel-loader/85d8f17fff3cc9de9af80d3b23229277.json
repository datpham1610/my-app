{"ast":null,"code":"var _jsxFileName = \"/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js\";\nimport React from 'react';\nimport Todo from './Todo';\nimport PropTypes from 'prop-types';\nimport { editTodo } from '../actions';\n\nconst TodoList = ({\n  todos\n}) => React.createElement(\"div\", {\n  className: \"col-lg-12 mt-lg-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, todos.map(value => {\n  if (value.status === false) {\n    return React.createElement(Todo, {\n      key: value.id,\n      id: value.id,\n      status: value.status,\n      created: value.created,\n      content: value.content,\n      dead: value.dead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  return null;\n}));\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired,\n    content: PropTypes.string.isRequired,\n    created: PropTypes.string.isRequired,\n    dead: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\n\nconst mapDispatch2Props = dispatch => {\n  return {\n    editTodo: ({\n      data\n    }) => dispatch(editTodo({\n      data\n    }))\n  };\n};\n\nexport default connect(null, mapDispatch2Props)(TodoList);","map":{"version":3,"sources":["/Users/pdd/Desktop/Test/my-app/src/components/TodoList.js"],"names":["React","Todo","PropTypes","editTodo","TodoList","todos","map","value","status","id","created","content","dead","propTypes","arrayOf","shape","string","isRequired","bool","mapDispatch2Props","dispatch","data","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,YAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACb;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEEA,KAAK,CAACC,GAAN,CAAUC,KAAK,IAAI;AACjB,MAAGA,KAAK,CAACC,MAAN,KAAe,KAAlB,EAAwB;AACtB,WAEE,oBAAC,IAAD;AACI,MAAA,GAAG,EAAID,KAAK,CAACE,EADjB;AAEI,MAAA,EAAE,EAAIF,KAAK,CAACE,EAFhB;AAGI,MAAA,MAAM,EAAIF,KAAK,CAACC,MAHpB;AAII,MAAA,OAAO,EAAID,KAAK,CAACG,OAJrB;AAKI,MAAA,OAAO,EAAIH,KAAK,CAACI,OALrB;AAMI,MAAA,IAAI,EAAIJ,KAAK,CAACK,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAWA;;AACF,SAAO,IAAP;AACD,CAfD,CAFF,CADJ;;AAuBAR,QAAQ,CAACS,SAAT,GAAqB;AACjBR,EAAAA,KAAK,EAACH,SAAS,CAACY,OAAV,CACFZ,SAAS,CAACa,KAAV,CAAgB;AACZN,IAAAA,EAAE,EAACP,SAAS,CAACc,MAAV,CAAiBC,UADR;AAEZT,IAAAA,MAAM,EAACN,SAAS,CAACgB,IAAV,CAAeD,UAFV;AAGZN,IAAAA,OAAO,EAACT,SAAS,CAACc,MAAV,CAAiBC,UAHb;AAIZP,IAAAA,OAAO,EAACR,SAAS,CAACc,MAAV,CAAiBC,UAJb;AAKZL,IAAAA,IAAI,EAACV,SAAS,CAACc,MAAV,CAAiBC;AALV,GAAhB,EAMGA,UAPD,EAQJA;AATe,CAArB;;AAYA,MAAME,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACHjB,IAAAA,QAAQ,EAAG,CAAC;AAACkB,MAAAA;AAAD,KAAD,KAAYD,QAAQ,CAACjB,QAAQ,CAAC;AAACkB,MAAAA;AAAD,KAAD,CAAT;AAD5B,GAAP;AAGD,CAJD;;AAMA,eAAeC,OAAO,CAAC,IAAD,EAAOH,iBAAP,CAAP,CAAiCf,QAAjC,CAAf","sourcesContent":["import React from 'react'\nimport Todo from './Todo'\nimport PropTypes from 'prop-types'\nimport {editTodo} from '../actions'\n\nconst TodoList = ({todos}) => (\n    <div className=\"col-lg-12 mt-lg-4\" >\n    {\n      todos.map(value => {\n        if(value.status===false){\n          return(\n            \n            <Todo\n                key = {value.id}\n                id = {value.id}\n                status = {value.status}\n                created = {value.created}\n                content = {value.content}\n                dead = {value.dead}\n            />\n\n        )}\n        return null\n      })\n    }\n  </div>\n)\n\nTodoList.propTypes = {\n    todos:PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.string.isRequired,\n            status:PropTypes.bool.isRequired,\n            content:PropTypes.string.isRequired,\n            created:PropTypes.string.isRequired,\n            dead:PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired\n}\n\nconst mapDispatch2Props = (dispatch) => {\n  return {\n      editTodo : ({data}) => dispatch(editTodo({data}))\n  }\n}\n\nexport default connect(null, mapDispatch2Props)(TodoList)"]},"metadata":{},"sourceType":"module"}